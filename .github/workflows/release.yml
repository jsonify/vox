name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: macos-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: '5.9'
    
    - name: Extract version from tag
      id: version
      run: |
        TAG=${GITHUB_REF#refs/tags/}
        VERSION=${TAG#v}
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Release version: $VERSION"
    
    - name: Run tests
      run: |
        echo "Running CI tests..."
        swift test --filter CITests --verbose
    
    - name: Build release binary
      run: |
        echo "Building release binary..."
        swift build -c release --verbose
        
        # Find and copy the binary
        BINARY_PATH=$(find .build -name "vox" -type f -path "*/release/*" | head -1)
        if [ -z "$BINARY_PATH" ]; then
          echo "ERROR: Could not find release binary"
          find .build -name "vox" -type f
          exit 1
        fi
        
        echo "Found binary at: $BINARY_PATH"
        mkdir -p dist
        cp "$BINARY_PATH" dist/vox
        chmod +x dist/vox
        
        # Verify binary
        echo "Binary info:"
        ls -la dist/vox
        file dist/vox
        
        # Test binary
        if ./dist/vox --help > /dev/null 2>&1; then
          echo "✅ Binary test successful"
        else
          echo "⚠️ Binary test failed (may be normal in CI)"
        fi
    
    - name: Create distribution packages
      run: |
        cd dist
        
        # Create archives
        tar -czf "vox-${{ steps.version.outputs.version }}-macos.tar.gz" vox
        zip "vox-${{ steps.version.outputs.version }}-macos.zip" vox
        
        # Generate checksums
        shasum -a 256 *.tar.gz *.zip > checksums.txt
        
        echo "Created packages:"
        ls -la
        echo "Checksums:"
        cat checksums.txt
    
    - name: Generate release notes
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        
        if [ -n "$PREVIOUS_TAG" ]; then
          echo "Changes since $PREVIOUS_TAG:" > release_notes.md
          echo "" >> release_notes.md
          git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> release_notes.md
        else
          echo "Release ${{ steps.version.outputs.tag }}" > release_notes.md
          echo "" >> release_notes.md
          echo "Initial release features:" >> release_notes.md
          echo "- MP4 video audio extraction" >> release_notes.md
          echo "- Native macOS speech transcription" >> release_notes.md
          echo "- Cloud API fallback support" >> release_notes.md
          echo "- Multiple output formats (TXT, SRT, JSON)" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "## Installation" >> release_notes.md
        echo "" >> release_notes.md
        echo "Download and extract the archive, then:" >> release_notes.md
        echo "\`\`\`bash" >> release_notes.md
        echo "sudo mv vox /usr/local/bin/" >> release_notes.md
        echo "vox --help" >> release_notes.md
        echo "\`\`\`" >> release_notes.md
        
        echo "Release notes:"
        cat release_notes.md
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.tag }}
        name: Vox CLI ${{ steps.version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, '-') }}
        files: |
          dist/vox-${{ steps.version.outputs.version }}-macos.tar.gz
          dist/vox-${{ steps.version.outputs.version }}-macos.zip
          dist/checksums.txt